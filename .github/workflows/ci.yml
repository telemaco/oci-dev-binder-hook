name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install libudev-dev
        run: sudo apt-get install -y libudev-dev
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          components: rustfmt, clippy
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-checks-${{ hashFiles('**/Cargo.lock') }}
      - name: Run clippy
        run: cargo clippy -- -D warnings
      - name: Install cargo-deny
        run: |
          if ! command -v cargo-deny &> /dev/null; then
            cargo install cargo-deny --locked
          fi
      - name: Run cargo deny
        run: cargo deny check

  build:
    name: Build, Test & Coverage
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - uses: actions/checkout@v4
      - name: Install libudev-dev
        run: sudo apt-get install -y libudev-dev
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          components: llvm-tools-preview
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cargo-nextest
        run: |
          if ! command -v cargo-nextest &> /dev/null; then
            cargo install cargo-nextest --locked
          fi
      - name: Install cargo-llvm-cov
        run: |
          if ! command -v cargo-llvm-cov &> /dev/null; then
            cargo install cargo-llvm-cov --locked
          fi
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo nextest run --verbose
      - name: Run coverage
        run: cargo llvm-cov nextest --fail-under-regions 50 --fail-under-lines 50
